[package]
name = "c18_model"
version = "0.2.0"
edition = "2021"
authors = ["c18_model Contributors <contributors@c18model.dev>"]
description = "Rust implementation of theoretical models for system modeling, machine learning, and formal methods"
license = "MIT OR Apache-2.0"
repository = "https://github.com/c18model/c18_model"
documentation = "https://docs.rs/c18_model"
homepage = "https://c18model.dev"
keywords = ["rust", "modeling", "machine-learning", "formal-methods", "mathematics", "queueing-theory", "statistics"]
categories = ["science", "algorithms", "mathematics", "simulation"]
readme = "README.md"
rust-version = "1.70"

[dependencies]
# 序列化和反序列化
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# 错误处理
thiserror = { workspace = true }

# 已裁剪：异步运行时

# UUID生成
uuid = { version = "1.0", features = ["v4"] }

# 时间处理
chrono = { version = "0.4", features = ["serde"] }

# 随机数生成
fastrand = "2.0"

# 图算法
petgraph = "0.6"

# 已裁剪：并行计算

# 数值计算
num-traits = "0.2"
num-derive = "0.3"

# 统计计算
statrs = "0.16"

# 数学函数
libm = "0.2"

[dev-dependencies]
# 基准测试
criterion = { version = "0.5", features = ["html_reports"] }

# 属性测试
proptest = "1.0"

# 测试工具
tempfile = "3.0"

# 文档测试
doc-comment = "0.3"

# 并发模型验证
loom = "0.7"

[features]
default = ["std"]
std = []
no-std = []
## 已裁剪：async/visualization/benchmarks/parallel 等特性

# 运行时/示例适配（通过 features 选择，依赖为可选）
tokio-adapter = ["dep:tokio", "dep:tokio-util"]
async-std-adapter = ["dep:async-std", "dep:async-channel"]
tower-examples = ["dep:tower", "dep:http", "dep:hyper"]
c20-integration = ["dep:c20_distributed"]

[dependencies.tokio]
version = "1"
features = ["rt-multi-thread", "sync", "time"]
optional = true

[dependencies.tokio-util]
version = "0.7"
features = ["rt"]
optional = true

[dependencies.async-std]
version = "1"
features = ["attributes"]
optional = true

[dependencies.async-channel]
version = "2"
optional = true

[dependencies.tower]
version = "0.4"
features = ["limit", "timeout", "retry", "util"]
optional = true

[dependencies.http]
version = "0.2"
optional = true

[dependencies.hyper]
version = "0.14"
features = ["client", "http1", "tcp"]
optional = true

[dependencies.c20_distributed]
path = "../c20_distributed"
optional = true

# 已裁剪：nalgebra / plotly / wasm-bindgen 及 wasm 目标依赖

[[bench]]
name = "concurrency_bench"
harness = false

# Profile configurations are managed at workspace root level
