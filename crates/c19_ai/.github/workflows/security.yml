name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'  # 每天凌晨2点运行

jobs:
  # 依赖安全扫描
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run cargo audit
      run: cargo audit
    
    - name: Install cargo-deny
      run: cargo install cargo-deny
    
    - name: Run cargo-deny
      run: cargo deny check
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: cargo-deny-report.json

  # 代码安全扫描
  code-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run clippy security checks
      run: cargo clippy --all-targets --all-features -- -D warnings -A clippy::all
    
    - name: Install cargo-geiger
      run: cargo install cargo-geiger
    
    - name: Run cargo geiger
      run: cargo geiger
    
    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin
    
    - name: Run test coverage
      run: cargo tarpaulin --out Html --output-dir coverage/
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

  # 容器安全扫描
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t c19-ai:latest .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'c19-ai:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run Docker Scout
      run: |
        docker scout cves c19-ai:latest

  # 密钥扫描
  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  # 许可证合规检查
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-deny
      run: cargo install cargo-deny
    
    - name: Check licenses
      run: cargo deny check licenses
    
    - name: Generate license report
      run: cargo deny check licenses --format json > license-report.json
    
    - name: Upload license report
      uses: actions/upload-artifact@v3
      with:
        name: license-report
        path: license-report.json

  # 安全通知
  security-notification:
    name: Security Notification
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, container-scan, secret-scan, license-check]
    if: always()
    
    steps:
    - name: Check security scan results
      run: |
        if [ "${{ needs.dependency-scan.result }}" != "success" ] || 
           [ "${{ needs.code-scan.result }}" != "success" ] || 
           [ "${{ needs.container-scan.result }}" != "success" ] || 
           [ "${{ needs.secret-scan.result }}" != "success" ] || 
           [ "${{ needs.license-check.result }}" != "success" ]; then
          echo "Security scan failed. Please review the results."
          exit 1
        fi
    
    - name: Send security notification
      if: failure()
      run: |
        echo "Security scan completed with issues. Please review the reports."
