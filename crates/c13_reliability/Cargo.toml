[package]
name = "c13_reliability"
version = "0.1.1"
edition = "2024"

resolver = "3"
rust-version = "1.90"
authors = ["Rust Reliability Team"]
description = "统一可靠性框架：错误处理、容错机制、运行时监控和自愈"
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-lang/c13_reliability"
keywords = ["reliability", "error-handling", "fault-tolerance", "monitoring", "resilience"]
categories = ["error-handling", "development-tools::testing"]

[dependencies]
# 形式化验证工具依赖（可选）
# prusti-contracts = { version = "0.2", optional = true }
# creusot-contracts = { version = "0.2", optional = true }


# 错误处理
anyhow = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# OpenTelemetry 支持 - 2025年最新版本
opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, optional = true }
opentelemetry-otlp = { workspace = true, optional = true }
opentelemetry-stdout = { workspace = true, optional = true }
opentelemetry-proto = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }

# 异步支持
tokio = { workspace = true, optional = true }
futures = { workspace = true, optional = true }
async-trait = { workspace = true, optional = true }

# 序列化
serde = { workspace = true }
serde_json = { workspace = true }

# 并发和同步
parking_lot = { workspace = true, optional = true }
dashmap = { workspace = true, optional = true }
crossbeam = { workspace = true, optional = true }

# 时间处理
chrono = { workspace = true }
tokio-util = { workspace = true }

# 指标和监控
metrics = { workspace = true, optional = true }
metrics-exporter-prometheus = { workspace = true, optional = true }
prometheus = { workspace = true, optional = true }

# 配置管理
config = { workspace = true }
toml = { workspace = true }

# 网络和HTTP
reqwest = { workspace = true }
url = { workspace = true }

# 随机数生成
rand = { workspace = true }

# 日志记录 - 2025年9月27日最新版本
env_logger = { version = "0.11.8", optional = true }

# 属性测试
proptest = { workspace = true, optional = true }

# 系统信息 - 2025年9月27日最新版本
sysinfo = { version = "0.37.2", optional = true }

# 主机名获取 - 2025年9月27日最新版本
hostname = { version = "0.4.1", optional = true }

# 内存管理 - 2025年9月27日最新版本
jemallocator = { version = "0.5.4", optional = true }

# UUID 支持
uuid = { workspace = true }

# 时间处理增强
time = { workspace = true }

# OCI 规范（可选）
oci-spec = { version = "0.8", optional = true }

[dev-dependencies]
criterion = { workspace = true, features = ["async"] }
tokio-test = { workspace = true }

[features]
default = ["std", "async", "monitoring", "fault-tolerance", "otlp", "logging", "os-environment"]
std = []
async = ["tokio", "futures", "async-trait"]
monitoring = ["metrics", "metrics-exporter-prometheus", "sysinfo", "prometheus"]
fault-tolerance = ["parking_lot", "dashmap", "crossbeam"]
chaos-engineering = ["proptest"]
jemalloc = ["jemallocator"]
otlp = ["opentelemetry", "opentelemetry_sdk", "opentelemetry-otlp", "tracing-opentelemetry"]
otlp-stdout = ["opentelemetry-stdout"]
otlp-proto = ["opentelemetry-proto"]
logging = ["env_logger"]

# 形式化验证特性标志
verification = []
prusti = ["verification"]
creusot = ["verification"]

# 运行时环境支持
os-environment = ["sysinfo", "hostname"]
embedded-environment = []
container-environment = []

# 云原生/CNCF 对齐能力（可选启用）
containers = ["container-environment"]
virtualization = []
# 仅在需要对接 Kubernetes 时启用。保持默认关闭避免增加构建体积。
kubernetes = []
# 可选本地 Docker 运行时适配（不默认启用）
docker-runtime = []
# 启用 OCI 规范解析
oci = ["oci-spec"]

[[bench]]
name = "reliability_benchmarks"
harness = false
